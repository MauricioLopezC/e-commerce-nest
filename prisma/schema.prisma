// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  price       Float
  description String
  category    String
  sex         String
  images      Images[]
  cartItem    CartItem[]
  productSku  ProductSku[]
}

model ProductSku {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  size      String
  color     String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Images {
  id            Int     @id @default(autoincrement())
  product       Product @relation(fields: [productCombId], references: [id])
  productCombId Int
  imgSrc        String
}

model User {
  id            Int      @id @default(autoincrement())
  dni           Int?     @unique
  firstName     String
  lastName      String
  email         String   @unique
  verifiedEmail Boolean  @default(false)
  password      String
  cart          Cart?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int        @unique //necesary for one to one relations
  updatedAt DateTime   @updatedAt
  CartItem  CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  color     String
  size      String
  quantity  Int
}

//importante que no sea unica asi podemos guardar todos los productos de todos los usuarios y luego lo relacionamos con el 
//cart que si teine userId unico
